name: Backend Continuous Deployment

on:
  push:
    branches:
     - main
    paths:
     - 'starter/backend/**'
  workflow_dispatch:

#below is to set backend directory variable to avoid listing the same throughout every job
env:
  wd: starter/backend
  REACT_APP_MOVIE_API_URL: http://a2ced92a4da99466ba33eec2f919604c-425361476.us-east-1.elb.amazonaws.com # http://localhost:5000 #Backend URL

#Start of the ci jobs. Lint, Test & Build
jobs:
  lint:
    name: Lint Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup python env
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install all dependencies #This will install all dependencies. Incl. flask, flake8 pytest etc
        run: cd $wd && pipenv install --dev

      - name: Run lint
        run: cd $wd && pipenv run lint
  
  test:
    name: Test Job
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Pipenv
        run: pip install pipenv
        
      - name: Install all dependencies #This will install all dependencies. Incl. flask, flake8 pytest etc
        run: cd $wd && pipenv install --dev

      - name: Run Test 
        run: cd $wd && pipenv run test
  
  build:
    name: Build Job
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.BACKEND_ECR_REPO }}
        run: |
          cd $wd
          IMAGE_TAG=latest

          docker build \
            --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      - name: Set image tag in Kustomize
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.BACKEND_ECR_REPO }}
        run: |
          cd starter/backend/k8s
          IMAGE_TAG=latest
          kustomize edit set image backend=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy Docker Image with Kustomize
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
          kubectl apply -k starter/backend/k8s
